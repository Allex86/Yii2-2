
Warning: PHP Startup: Unable to load dynamic library 'bz2' (tried: \xampp\php\ext\bz2 (Не найден указанный модуль.
), \xampp\php\ext\php_bz2.dll (Не найден указанный модуль.
)) in Unknown on line 0

Warning: PHP Startup: Unable to load dynamic library 'curl' (tried: \xampp\php\ext\curl (Не найден указанный модуль.
), \xampp\php\ext\php_curl.dll (Не найден указанный модуль.
)) in Unknown on line 0

Warning: PHP Startup: Unable to load dynamic library 'fileinfo' (tried: \xampp\php\ext\fileinfo (Не найден указанный модуль.
), \xampp\php\ext\php_fileinfo.dll (Не найден указанный модуль.
)) in Unknown on line 0

Warning: PHP Startup: Unable to load dynamic library 'gd2' (tried: \xampp\php\ext\gd2 (Не найден указанный модуль.
), \xampp\php\ext\php_gd2.dll (Не найден указанный модуль.
)) in Unknown on line 0

Warning: PHP Startup: Unable to load dynamic library 'gettext' (tried: \xampp\php\ext\gettext (Не найден указанный модуль.
), \xampp\php\ext\php_gettext.dll (Не найден указанный модуль.
)) in Unknown on line 0

Warning: PHP Startup: Unable to load dynamic library 'mbstring' (tried: \xampp\php\ext\mbstring (Не найден указанный модуль.
), \xampp\php\ext\php_mbstring.dll (Не найден указанный модуль.
)) in Unknown on line 0

Warning: PHP Startup: Unable to load dynamic library 'exif' (tried: \xampp\php\ext\exif (Не найден указанный модуль.
), \xampp\php\ext\php_exif.dll (Не найден указанный модуль.
)) in Unknown on line 0

Warning: PHP Startup: Unable to load dynamic library 'mysqli' (tried: \xampp\php\ext\mysqli (Не найден указанный модуль.
), \xampp\php\ext\php_mysqli.dll (Не найден указанный модуль.
)) in Unknown on line 0

Warning: PHP Startup: Unable to load dynamic library 'pdo_mysql' (tried: \xampp\php\ext\pdo_mysql (Не найден указанный модуль.
), \xampp\php\ext\php_pdo_mysql.dll (Не найден указанный модуль.
)) in Unknown on line 0

Warning: PHP Startup: Unable to load dynamic library 'pdo_sqlite' (tried: \xampp\php\ext\pdo_sqlite (Не найден указанный модуль.
), \xampp\php\ext\php_pdo_sqlite.dll (Не найден указанный модуль.
)) in Unknown on line 0

Warning: PHP Startup: Unable to load dynamic library 'php_openssl.dll' (tried: \xampp\php\ext\php_openssl.dll (Не найден указанный модуль.
), \xampp\php\ext\php_php_openssl.dll.dll (Не найден указанный модуль.
)) in Unknown on line 0

Warning: PHP Startup: Unable to load dynamic library 'php_ftp.dll' (tried: \xampp\php\ext\php_ftp.dll (Не найден указанный модуль.
), \xampp\php\ext\php_php_ftp.dll.dll (Не найден указанный модуль.
)) in Unknown on line 0

Warning: Cannot open '\xampp\php\extras\browscap.ini' for reading in Unknown on line 0

Deprecated: The each() function is deprecated. This message will be suppressed on further calls in C:\Users\РђlleX\AppData\Roaming\Sublime Text 3\Packages\PHPTools\php.tools\codeFormatter.php on line 54
<?php

use yii\grid\GridView;
use yii\helpers\Html;
use yii\widgets\Pjax;

/* @var $this yii\web\View */
/* @var $searchModel common\models\search\TaskSearch */
/* @var $dataProvider yii\data\ActiveDataProvider */

$this->title                   = 'Tasks';
$this->params['breadcrumbs'][] = $this->title;
?>
<div class="task-index">

    <h1><?=Html::encode($this->title)?></h1>
<?php Pjax::begin();?>
    <?php // echo $this->render('_search', ['model' => $searchModel]); ?>
<p>
<?=Html::a('Create Task', ['create'], ['class' => 'btn btn-success'])?>
</p>

<?=GridView::widget([
		'dataProvider' => $dataProvider,
		'filterModel'  => $searchModel,
		'columns'      => [
			// 'project_id',
			[
				'label'     => 'Project',
				'attribute' => 'project_id',
				'format'    => 'html',
				'filter'    => \common\models\Project::STATUSES,
				'value'     =>
function ($model) {
					return Html::a($model->project->title, ['project/view', 'id' => $model->project->id]);
				}
			],
			'title',
			'description:ntext',
			'estimation',
			// 'executor.username',
			['attribute' => 'executor_id',
				// 'label' => 'Executor',
				'filter' => common\models\User::find()
				->select('username')
				->onlyActive()
				->indexBy('id')
				->column(),
				'format' => 'html',
				'value'  => function ($model) {
					if ($model->executor) {
						return Html::a($model->executor->username, ['user/view', 'id' => $model->executor->id]);
					}
				}
			],
			'started_at:datetime',
			'completed_at:datetime',
			// 'created_by',
			[
				'attribute' => 'created_by',
				'format'    => 'html',
				'filter'    => common\models\User::find()
				->select('username')
				->onlyActive()
				->indexBy('id')
				->column(),
				'value'                                                       => function ($model) {
					return Html::a($model->creator->username, ['user/view', 'id' => $model->creator->id]);
				}
			],
			// 'updated_by',
			'created_at:datetime',
			'updated_at:datetime',

			['class'    => 'yii\grid\ActionColumn',
				'template' => '{view} {take} {complete} {update} {delete}',
				'buttons'  => [
					'take'    => function ($url, \common\models\Task $model, $key) {
						$icon = \yii\bootstrap\Html::icon('cloud-download');
						if (Yii::$app->taskService->canTake($model, Yii::$app->user->identity)) {
							return Html::a($icon, ['task/take', 'id' => $model->id], ['data' => [
										'confirm'                             => 'Р’Р·СЏС‚СЊ Р·Р°РґР°С‡Сѓ?',
										'method'                              => 'post',
									]]);
						}
					},
					'complete' => function ($url, \common\models\Task $model, $key) {
						$icon = \yii\bootstrap\Html::icon('cloud-upload');
						if (Yii::$app->taskService->canCompele($model, Yii::$app->user->identity)) {
							return Html::a($icon, ['task/complete', 'id' => $model->id], ['data' => [
										'confirm'                                 => 'Р—Р°РІРµСЂС€РёС‚СЊ Р·Р°РґР°С‡Сѓ?',
										'method'                                  => 'post',
									]]);
						}
					},
				],
				'visibleButtons' => [
					'update'        => function (\common\models\Task $model, $key, $index) {
						return Yii::$app->taskService->canManage($model->project, Yii::$app->user->identity);
					},
					'delete' => function (\common\models\Task $model, $key, $index) {
						return Yii::$app->taskService->canManage($model->project, Yii::$app->user->identity);
					},
				]
			],
		],
	]);?>

<?php Pjax::end();?>
</div>
